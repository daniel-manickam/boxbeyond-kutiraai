version: '3.8'

services:
  postgres-product:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "${PRODUCT_POSTGRES_PORT}:${PRODUCT_POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${PRODUCT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PRODUCT_POSTGRES_PASSWORD}
      - POSTGRES_DB=${PRODUCT_POSTGRES_DB}
      - PGPORT=${PRODUCT_POSTGRES_PORT}
    command: -p ${PRODUCT_POSTGRES_PORT}
    volumes:
      - postgres_product_storage:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PRODUCT_POSTGRES_USER} -d ${PRODUCT_POSTGRES_DB} -p ${PRODUCT_POSTGRES_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-api
    ports:
      - "8200:8200"
    volumes:
      - ./app:/app/app
    environment:
      - DB_USER=${PRODUCT_POSTGRES_USER}
      - DB_PASSWORD=${PRODUCT_POSTGRES_PASSWORD}
      - DB_HOST=postgres-product
      - DB_PORT=${PRODUCT_POSTGRES_PORT}
      - DB_NAME=${PRODUCT_POSTGRES_DB}
      - ENVIRONMENT=${ENVIRONMENT}
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    depends_on:
      postgres-product:
        condition: service_healthy

volumes:
  postgres_product_storage: